version: '3'

env:
  CLUSTER_NAME: multi-Cluster
  AWS_REGION: ap-northeast-2
  AWS_PROFILE: default
 # kubectl_config_context: arn:aws:eks:ap-northeast-2:025066243053:cluster/multi-Cluster
  kubectl_config_context: dg_cli@multi-Cluster.ap-northeast-2.eksctl.io
  
tasks:
  kind:01-generate-config:
    cmds:
      - REPLACE_WITH_ABSOLUTE_PATH=${PWD} envsubst < kind-config.yaml.TEMPLATE > kind-config.yaml
    desc: "config 파일 생성"

  kind:02-create-cluster:
    cmds:
      - kind create cluster --config kind-config.yaml
    desc: "클러스터 생성"
  
  # aws:00-authenticate-cli:
  #   cmds:
  #     - aws configure
  #   dsec: "AWS CLI 인증"

  aws:01-create-eks-cluster:
    cmds:
      - eksctl create cluster 
          --name "${CLUSTER_NAME}" 
          --region "${AWS_REGION}" 
          --nodegroup-name dg-eks 
          --node-type t3.medium 
          --nodes 2 
          --managed 
    desc: "EKS 클러스터 생성"
  #---------------------------------------

  aws:00-cli-and-eks-ctl:
    cmds:
      - aws configure
      - eksctl version
    desc: "AWS CLI와 eksctl 버전 확인"


  aws:02-setup-eks:
    cmds:
      - task: kubectl_config_set
      - task: check_cluster_status
      - task: connect_to_eks
    desc: "Setup EKS cluster"

  kubectl_config_set:
    cmds:
      - kubectl config use-context ${kubectl_config_context}
    desc: "EKS kubectl로 클러스터 선택해서 설정"

  check_cluster_status:
    cmds:
      - |
        if [[ "$(aws eks describe-cluster --name ${CLUSTER_NAME} --region ${AWS_REGION} --query "cluster.status" --output text)" != "ACTIVE" ]]; then
          echo "Cluster status is CREATING or INACTIVE. Please wait until it becomes ACTIVE."
          exit 1
        else
          echo "Cluster is already ACTIVE."
        fi
    desc: "EKS 클러스터가 이미 활성화되어 있는지 확인"

  connect_to_eks: # Connects only if kubeconfig is not already set
    cmds:
      - |
        if ! kubectl config get-contexts | grep -q "${CLUSTER_NAME}"; then
          echo "Updating kubeconfig for the EKS cluster..."
          aws eks --region ${AWS_REGION} update-kubeconfig --name ${CLUSTER_NAME}
        else
          echo "Kubeconfig is already updated with the cluster."
        fi
    desc: "kubeconfig이 설정되어 있지 않은 경우에만 EKS에 연결"

    #-k8s/02-built-in-resource-type
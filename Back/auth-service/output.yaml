---
# Source: auth-service/templates/secrets.yml
apiVersion: v1
kind: Secret
metadata:
  name: auth-service
  labels:
    helm.sh/chart: auth-service
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  DB_HOST: ""
  DB_USERNAME: ""
  DB_NAME: "YXV0aC1zZXJ2aWNl"
  DB_PASSWORD: ""
  DB_PORT: "MzMwNg=="

  JWT_SECRET: ""
  JWT_ACCESS_TOKEN_VALIDITY: "My42ZSswNg=="
  JWT_REFRESH_TOKEN_VALIDITY: "Ni4wNDhlKzA4"
  
  MAIL_USERNAME: ""
  MAIL_PASSWORD: ""
  MAIL_HOST: "c210cC5nbWFpbC5jb20="
  MAIL_PORT: "NTg3"

  REDIS_HOST: ""
  REDIS_PORT: ""
  REDIS_PASSWORD: "PG5pbD4="

  SECURITY_USER_NAME: ""
  SECURITY_USER_PASSWORD: ""
---
# Source: auth-service/templates/configmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service
  labels:
    helm.sh/chart: auth-service
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
data:
  application.yml: |
    server: 
      port: 9100 
    spring:
      web:
        cors:
          enabled: fals
      security:
        cors:
          enabled: false
      filter:
        cors:
          enabled: false
      application:
        name: auth-service
      datasource:
        url: jdbc:mysql:// ${DB_HOST}:${DB_PORT}/${DB_NAME}?useSSL=false&serverTimezone=UTC
        username: ${DB_USERNAME}
        password: ${DB_PASSWORD} 
        driver-class-name: com.mysql.cj.jdbc.Driver
      jpa:
        hibernate:
          ddl-auto: update
          show-sql: true
        properties:
          hibernate:
            dialect: org.hibernate.dialect.MySQL8Dialect
            format_sql: true
            use_sql_comments: true

      mail:
        host: ${MAIL_HOST}
        port: ${MAIL_PORT}
        username: ${MAIL_USERNAME}
        password: ${MAIL_PASSWORD}
        properties:
          mail.smtp.auth: true
          mail.smtp.starttls.enable: true


    jwt:
      secret: ${JWT_SECRET}
      access-token-validity: ${JWT_ACCESS_TOKEN_VALIDITY}
      refresh-token-validity: ${JWT_REFRESH_TOKEN_VALIDITY}
    
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}

    security:
      user:
        name: ${SECURITY_USER_NAME}
        password: ${SECURITY_USER_PASSWORD}

    springdoc:
      api-docs:
        path: /v3/api-docs
      swagger-ui:
        enabled: true
        path: /swagger-ui.html
        cors:
          enabled: false

    logging:
      level:
        com:
          multitap:
            auth: DEBUG
---
# Source: auth-service/templates/svc.yml
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  labels:
    helm.sh/chart: auth-service
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 9100
  selector:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: release-name
---
# Source: auth-service/templates/deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  labels:
    helm.sh/chart: auth-service
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: auth-service
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auth-service
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: auth-service
          image: "025066243053.dkr.ecr.ap-northeast-2.amazonaws.com/dg/multi-tap:auth-1"
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /app/config # 도커파일 workdir와 일치
          ports:
            - containerPort: 9100
          env: #환경 변수 (configmap)
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: DB_HOST

            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: DB_NAME

            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: DB_PORT

            - name: DB_USERNAME # 데이터베이스 유저 이름
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: DB_USERNAME

            - name: DB_PASSWORD # 데이터베이스 비밀번호
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: DB_PASSWORD      

            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: JWT_SECRET

            - name: JWT_ACCESS_TOKEN_VALIDITY
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: JWT_ACCESS_TOKEN_VALIDITY

            - name: JWT_REFRESH_TOKEN_VALIDITY
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: JWT_REFRESH_TOKEN_VALIDITY
                  
            - name: MAIL_HOST
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: MAIL_HOST

            - name: MAIL_PORT
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: MAIL_PORT   
              
            - name: MAIL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: MAIL_USERNAME

            - name: MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: MAIL_PASSWORD

            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: REDIS_HOST
            
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: REDIS_PORT

            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: auth-service
                  key: REDIS_PASSWORD

          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi

      volumes:
        - name: config-volume
          configMap:
            name: auth-service
---
# Source: auth-service/templates/ingress.yml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: auth-service-public
  annotations:
    konghq.com/strip-path: "true"
    konghq.com/methods: GET,POST,PUT,PATCH,DELETE,OPTIONS
    konghq.com/plugins: cors-auth-service
    konghq.com/strip-path: "true"
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: /auth-service/api/v1/auth/sign-up
            pathType: Prefix
            backend:
              service:
                name: auth-service
                port:
                  number: 80
          - path: /auth-service/api/v1/auth/sign-in
            pathType: Prefix
            backend:
              service:
                name: auth-service
                port:
                  number: 80
          - path: /auth-service/swagger-ui.html
            pathType: Prefix
            backend:
              service:
                name: auth-service
                port:
                  number: 80
          - path: /auth-service/swagger-ui/
            pathType: Prefix
            backend:
              service:
                name: auth-service
                port:
                  number: 80
          - path: /auth-service/v3/api-docs/
            pathType: Prefix
            backend:
              service:
                name: auth-service
                port:
                  number: 80
          - path: /auth-service/webjars
            pathType: Prefix
            backend:
              service:
                name: auth-service
                port:
                  number: 80
---
# Source: auth-service/templates/ingress.yml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: auth-service-protected
  annotations:
    konghq.com/strip-path: "true"
    konghq.com/plugins: jwt-auth-auth-service,cors-auth-service
    konghq.com/strip-path: "true"
spec:
  ingressClassName: kong
  rules:
    - http:
        paths:
          - path: /auth-service/api/v1/auth/
            pathType: Prefix
            backend:
              service:
                name: auth-service
                port:
                  number: 80
---
# Source: auth-service/templates/cors-plug.yml
# # cors plugin 최소 설정
# apiVersion: configuration.konghq.com/v1
# kind: KongPlugin
# metadata:
#   name: cors-auth-service
#   namespace: auth
#   labels:
#
    helm.sh/chart: auth-service
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
# plugin: cors
# config:
#   origins:
#     - "*"
#   methods:
#     - GET
#     - POST
#     - PUT
#     - DELETE
#     - OPTIONS
#   headers:
#     - Authorization
#     - Content-Type
#   credentials: true
---
# Source: auth-service/templates/kong-plugins.yml
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: jwt-auth-auth-service
  namespace: auth
  labels:
    helm.sh/chart: auth-service
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
plugin: jwt
---
# Source: auth-service/templates/kong-plugins.yml
apiVersion: configuration.konghq.com/v1
kind: KongPlugin
metadata:
  name: cors-auth-service
  namespace: auth
  labels:
    helm.sh/chart: auth-service
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
plugin: cors
config:
  origins:
    - "*"
  methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  headers:
    - Authorization
    - Content-Type
  credentials: true
